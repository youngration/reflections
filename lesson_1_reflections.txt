-查看文件的两个版本之间的差异如何帮助你了解引入的错误？
查找错误很费精力，特别是文件较大时。

-从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？
可以轻松的找到之前的版本，来和现有版本进行比对，查找可能引入的错误。

-你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？
手动提交受人影响较大，可能会忘记提交。自动保存可能会提交逻辑不完整的版本，若太频繁，则每次提交太小，反之又太大，不够灵活。

-你认为为何一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？
因为git处理的这些文件都是有关联的，所以需要同时提交。其他系统并不认为需要这样。

-如何使用命令 git log 和 git diff 来查看文件的历史记录？
git log可以查看每次提交的简单信息，并且是按时间倒序排列。git diff后面跟两个提交id就可以查看两次提交的比较。

-使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
在更改之前，先进行提交。

-现在你已设置了工作空间，你想尝试使用 Git 来做些什么？
整（verb）个项目